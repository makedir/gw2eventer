/*
 * The MIT License
 *
 * Copyright 2014 mkdr <makedir@gmail.com>.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JDialog;

/**
 *
 * @author mkdr <makedir@gmail.com>
 */
public class SoundSelectGui extends JDialog implements ActionListener {

    private boolean[] result;
    
    /**
     * Creates new form SoundSelectGui
     */
    public SoundSelectGui(java.awt.Frame parent, boolean modal, boolean[] preBoss) {
        
        super(parent, modal);
        
        initComponents();
        
        setIconImage(parent.getIconImage());
        
        this.jCheckBoxPreEvent.setSelected(preBoss[0]);
        this.jCheckBoxBoss.setSelected(preBoss[1]);
        this.jCheckBoxDaily.setSelected(preBoss[2]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCheckBoxPreEvent = new javax.swing.JCheckBox();
        jCheckBoxBoss = new javax.swing.JCheckBox();
        jCheckBoxDaily = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sound select");
        setIconImage(null);
        setPreferredSize(new java.awt.Dimension(280, 100));
        getContentPane().setLayout(new java.awt.GridLayout(2, 0));

        jCheckBoxPreEvent.setText("pre Event");
        jPanel1.add(jCheckBoxPreEvent);

        jCheckBoxBoss.setText("<html><strong><font color='green'>B</font></strong>oss Event</html>");
        jPanel1.add(jCheckBoxBoss);

        jCheckBoxDaily.setBackground(new java.awt.Color(51, 51, 51));
        jCheckBoxDaily.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jCheckBoxDaily.setForeground(new java.awt.Color(255, 255, 0));
        jCheckBoxDaily.setText("looted");
        jPanel1.add(jCheckBoxDaily);

        getContentPane().add(jPanel1);

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonOK);

        jButtonCancle.setText("Cancle");
        jButtonCancle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancleActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonCancle);

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancleActionPerformed

        this.result = null;
        
        dispose();
    }//GEN-LAST:event_jButtonCancleActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed

        this.result = new boolean[]{this.jCheckBoxPreEvent.isSelected(),
            this.jCheckBoxBoss.isSelected(), this.jCheckBoxDaily.isSelected()};
        
        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed

    public boolean[] showDialog() {
        
        setVisible(true);
        
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancle;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JCheckBox jCheckBoxBoss;
    private javax.swing.JCheckBox jCheckBoxDaily;
    private javax.swing.JCheckBox jCheckBoxPreEvent;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        
        dispose();
    }
}
